apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // 使用 kapt 注解处理工具
android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.github.fangkeweiyou1:libutils:1.1.1'

    //生命周期组件
    api "android.arch.lifecycle:extensions:$versions.lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$versions.lifecycle_version"
    // Dagger
    api "com.google.dagger:dagger:$versions.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$versions.daggerVersion"    // kapt 代替 annotationProcessor
    // Logging
    api "com.jakewharton.timber:timber:$versions.timberVersion"
    // RetroFit
    api "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    api "com.squareup.okhttp3:logging-interceptor:$versions.loggingInterceptorVersion"

    // Rx
    api "io.reactivex.rxjava2:rxandroid:$versions.rxAndroidVersion"
    // Already has RxJava, but still better to explicitly get latest version.
    api "io.reactivex.rxjava2:rxjava:$versions.rxJavaVersion"
    api "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofitVersion"
}
